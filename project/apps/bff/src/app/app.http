####################################################################################################
############################## Сервис пользователей #################################################
####################################################################################################
@userId={{register.response.body.id}}
@email={{register.response.body.email}}
@AToken={{login.response.body.accessToken}}
@RToken={{login.response.body.refreshToken}}

# Создание нового пользователя
# @name register
POST http://localhost:3000/api/user/register HTTP/1.1
Content-Type: application/json

{
  "email":"user5@gmail.com",
  "name":"John",
  "password":"12345678"
}

###

# Авторизация пользователя по email и password
# @name login
POST  http://localhost:3000/api/user/login HTTP/1.1
Content-Type: application/json

{
  "email":"user7@gmail.com",
  "password":"12345678"
}

###

#Смена пароля пользователя
PUT http://localhost:3333/api/user/change-password HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{AToken}}

{
  "oldPassword": "12345678",
  "newPassword":"1234568",
  "id":"{{userId}}"
}

###

#Получение информации о пользователе по ID
GET http://localhost:3000/api/user/{{userId}} HTTP/1.1
Authorization: Bearer {{AToken}}


###

# Получить новую пару JWT
POST http://localhost:3000/api/user/refresh HTTP/1.1
Authorization: Bearer {{RToken}}

###

# Загрузка аватара
# @name uploadAvatar
POST http://localhost:3000/api/files/upload/avatar HTTP/1.1
Content-Type: multipart/form-data; boundary=boundary

--boundary
Content-Disposition: form-data; name="avatar"; filename="avatar.jpg"
Content-Type: image/jpeg

< ../../../assets/avatar.jpg

--boundary--



####################################################################################################
############################## Сервис публикаций ####################################################
####################################################################################################
@publicId={{createPost.response.body.publicId}}
@photoPostId={{uploadPhoto.response.body.id}}


###

# Создание новой публикации
# @name createPost
POST http://localhost:3000/api/publics HTTP/1.1
Authorization: Bearer {{AToken}}
Content-Type: application/json

{
  "userId": "{{userId}}",
  "isRepost": false,
  "title": "Выбранный нами инновационный путь",
  "notice": "Новый закон накладывает вето на детский заливистый смех",
  "text": "Безусловно, сплочённость команды профессионалов способствует повышению качества экспериментов, поражающих по своей масштабности и грандиозности.",
  "tags": ["Animals","Video","Animals"],
  "commentsCount":0,
  "likesCount":0,
  "publicType": "text",
  "publicStatus": "draft"
}

###

# Создание новой публикации типа Photo
# @name uploadPhoto
POST http://localhost:3500/api/files/upload/photo/ HTTP/1.1
Content-Type: multipart/form-data; boundary=boundary

--boundary
Content-Disposition: form-data; name="photo"; filename="picture.jpg"
Content-Type: image/jpeg

<  ../../../assets/picture.jpg

--boundary
Content-Disposition: form-data; name="tags"

tag,test,PhoTo
--boundary--

###

# Получение публикации по ID
GET http://localhost:3000/api/publics/{{publicId}} HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{AToken}}

###
# Получение всех публикаций блога с пагинацией и фильтрами
GET http://localhost:3000/api/publics?limit=2&sortDirection=asc HTTP/1.1
Content-Type: application/json

###
# Получение всех публикаций блога с пагинацией и фильтрами для конкретного пользователя
GET http://localhost:3000/api/publics?limit=25&sortDirection=asc&userId={{userId}} HTTP/1.1
Content-Type: application/json

###

# Поиск публикаций по названию
GET http://localhost:3000/api/publics/search?title=movie  HTTP/1.1

###

# Получение черновиков публикаций конкретного пользователя
GET http://localhost:3000/api/publics/drafts/{{userId}}  HTTP/1.1
Authorization: Bearer {{AToken}}
Content-Type: application/json

###

# Рассылка новостных сообщений
GET http://localhost:3000/api/publics/send-news/{{userId}}/{{email}} HTTP/1.1
Authorization: Bearer {{AToken}}
Content-Type: application/json

###

# Репост публикации
POST  http://localhost:3000/api/publics/repost/d35052ec-b037-4e04-991d-532e51602291 HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{AToken}}

{
  "userId":"{{userId}}"
}

###

# Редактирование публикации
PATCH http://localhost:4000/api/publics/{{publicId}} HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{AToken}}

{
  "userId": "{{userId}}",
  "isRepost": true,
  "title": "Выбранный нами инновационный путь!!",
  "notice": "Новый закон накладывает вето на детский заливистый смех",
  "text": "Безусловно, сплочённость команды профессионалов способствует повышению качества экспериментов, поражающих по своей масштабности и грандиозности.",
  "tags": [],
  "publicType": "text",
  "publicStatus": "posted",
  "createAt": "2024-01-12"
}

###

# Удаление публикации по ID
DELETE http://localhost:3000/api/publics/{{publicId}} HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{AToken}}

###

# Моя лента
GET http://localhost:3000/api/publics/ribbon?limit=25&sortDirection=asc&userId={{userId}} HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{AToken}}


####################################################################################################
############################## Сервис комментариев ##################################################
####################################################################################################

@commentId={{createComment.response.body.commentId}}

# Создание нового комментария
# @name createComment
POST http://localhost:3000/api/publics/comments/{{publicId}} HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{AToken}}

{
  "userId":"{{userId}}",
  "text":"Comment text"
}

###

#Получение комментариев публикации

GET http://localhost:3000/api/publics/comments/{{publicId}} HTTP/1.1
Content-Type: application/json

###

#Удаление комментария по ID

DELETE http://localhost:3000/api/publics/comments/{{commentId}} HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{AToken}}


####################################################################################################
############################## Сервис лайков №№№№№№##################################################
####################################################################################################

@likeId={{addLike.response.body.likeId}}

#Добавление лайка

# @name addLike
POST http://localhost:3000/api/publics/likes/{{publicId}} HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{AToken}}

{
  "userId":"{{userId}}"
}

###

#Удаление лайка

DELETE http://localhost:3000/api/publics/likes/{{publicId}}/{{userId}} HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{AToken}}

###
